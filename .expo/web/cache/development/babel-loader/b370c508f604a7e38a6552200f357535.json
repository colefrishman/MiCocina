{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _UIManagerInjection = _interopRequireDefault(require(\"./UIManagerInjection\"));\n\nvar UIManager = global.RN$Bridgeless === true ? require('./DummyUIManager') : _UIManagerInjection.default.unstable_UIManager == null ? require('./PaperUIManager') : _UIManagerInjection.default.unstable_UIManager;\nmodule.exports = UIManager;","map":{"version":3,"sources":["D:/MiCocina/MiCocina/node_modules/react-native/Libraries/ReactNative/UIManager.js"],"names":["UIManager","global","RN$Bridgeless","require","UIManagerInjection","unstable_UIManager","module","exports"],"mappings":";;AAUA;;AAwBA,IAAMA,SAA+B,GACnCC,MAAM,CAACC,aAAP,KAAyB,IAAzB,GACIC,OAAO,CAAC,kBAAD,CADX,GAEIC,4BAAmBC,kBAAnB,IAAyC,IAAzC,GACAF,OAAO,CAAC,kBAAD,CADP,GAEAC,4BAAmBC,kBALzB;AAOAC,MAAM,CAACC,OAAP,GAAiBP,SAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport UIManagerInjection from './UIManagerInjection';\nimport type {Spec} from './NativeUIManager';\nimport type {RootTag} from 'react-native/Libraries/Types/RootTagTypes';\n\ninterface UIManagerJSInterface extends Spec {\n  +getViewManagerConfig: (viewManagerName: string) => Object;\n  +hasViewManagerConfig: (viewManagerName: string) => boolean;\n  +createView: (\n    reactTag: ?number,\n    viewName: string,\n    rootTag: RootTag,\n    props: Object,\n  ) => void;\n  +updateView: (reactTag: number, viewName: string, props: Object) => void;\n  +manageChildren: (\n    containerTag: ?number,\n    moveFromIndices: Array<number>,\n    moveToIndices: Array<number>,\n    addChildReactTags: Array<number>,\n    addAtIndices: Array<number>,\n    removeAtIndices: Array<number>,\n  ) => void;\n}\n\nconst UIManager: UIManagerJSInterface =\n  global.RN$Bridgeless === true\n    ? require('./DummyUIManager') // No UIManager in bridgeless mode\n    : UIManagerInjection.unstable_UIManager == null\n    ? require('./PaperUIManager')\n    : UIManagerInjection.unstable_UIManager;\n\nmodule.exports = UIManager;\n"]},"metadata":{},"sourceType":"script"}