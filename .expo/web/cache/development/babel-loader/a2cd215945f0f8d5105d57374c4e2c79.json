{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _UIManager = _interopRequireDefault(require(\"../ReactNative/UIManager\"));\n\nfunction deprecatedPropType(propType, explanation) {\n  return function validate(props, propName, componentName) {\n    if (global.RN$Bridgeless !== true && !_UIManager.default.hasViewManagerConfig(componentName) && props[propName] !== undefined) {\n      console.warn(\"`\" + propName + \"` supplied to `\" + componentName + \"` has been deprecated. \" + explanation);\n    }\n\n    for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      rest[_key - 3] = arguments[_key];\n    }\n\n    return propType.apply(void 0, [props, propName, componentName].concat(rest));\n  };\n}\n\nmodule.exports = deprecatedPropType;","map":{"version":3,"sources":["D:/MiCocina/MiCocina/node_modules/react-native/Libraries/Utilities/deprecatedPropType.js"],"names":["deprecatedPropType","propType","explanation","validate","props","propName","componentName","global","RN$Bridgeless","UIManager","hasViewManagerConfig","undefined","console","warn","rest","module","exports"],"mappings":";;AAUA;;AAKA,SAASA,kBAAT,CACEC,QADF,EAEEC,WAFF,EAGuB;AACrB,SAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,QAAzB,EAAmCC,aAAnC,EAA2D;AAEhE,QACEC,MAAM,CAACC,aAAP,KAAyB,IAAzB,IACA,CAACC,mBAAUC,oBAAV,CAA+BJ,aAA/B,CADD,IAEAF,KAAK,CAACC,QAAD,CAAL,KAAoBM,SAHtB,EAIE;AACAC,MAAAA,OAAO,CAACC,IAAR,OACOR,QADP,uBACmCC,aADnC,+BAC2EJ,WAD3E;AAGD;;AAV+D,sCAANY,IAAM;AAANA,MAAAA,IAAM;AAAA;;AAYhE,WAAOb,QAAQ,MAAR,UAASG,KAAT,EAAgBC,QAAhB,EAA0BC,aAA1B,SAA4CQ,IAA5C,EAAP;AACD,GAbD;AAcD;;AAEDC,MAAM,CAACC,OAAP,GAAiBhB,kBAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport UIManager from '../ReactNative/UIManager';\n\n/**\n * Adds a deprecation warning when the prop is used.\n */\nfunction deprecatedPropType(\n  propType: ReactPropsCheckType,\n  explanation: string,\n): ReactPropsCheckType {\n  return function validate(props, propName, componentName, ...rest) {\n    // Don't warn for native components.\n    if (\n      global.RN$Bridgeless !== true &&\n      !UIManager.hasViewManagerConfig(componentName) &&\n      props[propName] !== undefined\n    ) {\n      console.warn(\n        `\\`${propName}\\` supplied to \\`${componentName}\\` has been deprecated. ${explanation}`,\n      );\n    }\n\n    return propType(props, propName, componentName, ...rest);\n  };\n}\n\nmodule.exports = deprecatedPropType;\n"]},"metadata":{},"sourceType":"script"}