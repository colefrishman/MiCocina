{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _PickerPage = _interopRequireDefault(require(\"./Pages/PickerPage\"));\n\nvar _StartPage = _interopRequireDefault(require(\"./Pages/StartPage\"));\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\MiCocina\\\\MiCocina\\\\App.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar _useState = (0, _react.useState)(0),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    screen = _useState2[0],\n    setScreen = _useState2[1];\n\nvar App = function App() {\n  console.log(screen);\n  return _react.default.createElement(_reactNative.View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, function () {\n    switch (screen) {\n      case 0:\n        return _react.default.createElement(_StartPage.default, {\n          setScreen: setScreen,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }\n        });\n\n      case 1:\n        return _react.default.createElement(_PickerPage.default, {\n          setScreen: setScreen,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }\n        });\n    }\n  });\n};\n\nvar _default = App;\nexports.default = _default;","map":{"version":3,"sources":["D:/MiCocina/MiCocina/App.js"],"names":["screen","setScreen","App","console","log"],"mappings":";;;;;;;;;AAQA;;AACA;;AASA;;AACA;;;;;;;;;AAEA,gBAA4B,qBAAS,CAAT,CAA5B;AAAA;AAAA,IAAOA,MAAP;AAAA,IAAeC,SAAf;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAChBC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACA,SACE,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,YAAM;AACL,YAAQA,MAAR;AACE,WAAK,CAAL;AAAQ,eAAQ,6BAAC,kBAAD;AAAW,UAAA,SAAS,EAAEC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;;AACR,WAAK,CAAL;AAAQ,eAAQ,6BAAC,mBAAD;AAAY,UAAA,SAAS,EAAEA,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAFV;AAIC,GANH,CADF;AAUD,CAZD;;eAceC,G","sourcesContent":["/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n *\n * @format\n * @flow strict-local\n */\n\nimport React, {useState, useEffect} from 'react';\nimport {\n  SafeAreaView,\n  ScrollView,\n  StatusBar,\n  StyleSheet,\n  Text,\n  useColorScheme,\n  View,\n} from 'react-native';\nimport PickerPage from './Pages/PickerPage';\nimport StartPage from './Pages/StartPage';\n\nconst [screen, setScreen] = useState(0);\n\nconst App = () => {\n  console.log(screen)\n  return (\n    <View>\n    {() => {\n      switch (screen) {\n        case 0: return (<StartPage setScreen={setScreen} />);\n        case 1: return (<PickerPage setScreen={setScreen} />);\n      }\n      }}\n    </View>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"script"}