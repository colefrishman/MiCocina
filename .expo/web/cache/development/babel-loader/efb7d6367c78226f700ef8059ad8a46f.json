{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = NativeStackView;\n\nvar _elements = require(\"@react-navigation/elements\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nvar TRANSPARENT_PRESENTATIONS = ['transparentModal', 'containedTransparentModal'];\n\nfunction NativeStackView(_ref) {\n  var state = _ref.state,\n      descriptors = _ref.descriptors;\n  return React.createElement(_elements.SafeAreaProviderCompat, null, React.createElement(_reactNative.View, {\n    style: styles.container\n  }, state.routes.map(function (route, i) {\n    var _state$routes, _state$routes2;\n\n    var isFocused = state.index === i;\n    var canGoBack = i !== 0;\n    var previousKey = (_state$routes = state.routes[i - 1]) === null || _state$routes === void 0 ? void 0 : _state$routes.key;\n    var nextKey = (_state$routes2 = state.routes[i + 1]) === null || _state$routes2 === void 0 ? void 0 : _state$routes2.key;\n    var previousDescriptor = previousKey ? descriptors[previousKey] : undefined;\n    var nexDescriptor = nextKey ? descriptors[nextKey] : undefined;\n    var _descriptors$route$ke = descriptors[route.key],\n        options = _descriptors$route$ke.options,\n        navigation = _descriptors$route$ke.navigation,\n        render = _descriptors$route$ke.render;\n    var header = options.header,\n        headerShown = options.headerShown,\n        headerTintColor = options.headerTintColor,\n        headerBackImageSource = options.headerBackImageSource,\n        headerLeft = options.headerLeft,\n        headerRight = options.headerRight,\n        headerTitle = options.headerTitle,\n        headerTitleAlign = options.headerTitleAlign,\n        headerTitleStyle = options.headerTitleStyle,\n        headerStyle = options.headerStyle,\n        headerShadowVisible = options.headerShadowVisible,\n        headerTransparent = options.headerTransparent,\n        headerBackTitle = options.headerBackTitle,\n        presentation = options.presentation,\n        contentStyle = options.contentStyle;\n    var nextPresentation = nexDescriptor === null || nexDescriptor === void 0 ? void 0 : nexDescriptor.options.presentation;\n    return React.createElement(_elements.Screen, {\n      key: route.key,\n      focused: isFocused,\n      route: route,\n      navigation: navigation,\n      headerShown: headerShown,\n      headerTransparent: headerTransparent,\n      header: header !== undefined ? header({\n        back: previousDescriptor ? {\n          title: (0, _elements.getHeaderTitle)(previousDescriptor.options, previousDescriptor.route.name)\n        } : undefined,\n        options: options,\n        route: route,\n        navigation: navigation\n      }) : React.createElement(_elements.Header, {\n        title: (0, _elements.getHeaderTitle)(options, route.name),\n        headerTintColor: headerTintColor,\n        headerLeft: typeof headerLeft === 'function' ? function (_ref2) {\n          var tintColor = _ref2.tintColor;\n          return headerLeft({\n            tintColor: tintColor,\n            canGoBack: canGoBack,\n            label: headerBackTitle\n          });\n        } : headerLeft === undefined && canGoBack ? function (_ref3) {\n          var tintColor = _ref3.tintColor;\n          return React.createElement(_elements.HeaderBackButton, {\n            tintColor: tintColor,\n            backImage: headerBackImageSource !== undefined ? function () {\n              return React.createElement(_reactNative.Image, {\n                source: headerBackImageSource,\n                style: [styles.backImage, {\n                  tintColor: tintColor\n                }]\n              });\n            } : undefined,\n            onPress: navigation.goBack,\n            canGoBack: canGoBack\n          });\n        } : headerLeft,\n        headerRight: typeof headerRight === 'function' ? function (_ref4) {\n          var tintColor = _ref4.tintColor;\n          return headerRight({\n            tintColor: tintColor,\n            canGoBack: canGoBack\n          });\n        } : headerRight,\n        headerTitle: typeof headerTitle === 'function' ? function (_ref5) {\n          var children = _ref5.children,\n              tintColor = _ref5.tintColor;\n          return headerTitle({\n            children: children,\n            tintColor: tintColor\n          });\n        } : headerTitle,\n        headerTitleAlign: headerTitleAlign,\n        headerTitleStyle: headerTitleStyle,\n        headerStyle: [headerTransparent ? {\n          position: 'absolute',\n          backgroundColor: 'transparent'\n        } : null, headerStyle, headerShadowVisible === false ? {\n          shadowOpacity: 0,\n          borderBottomWidth: 0\n        } : null]\n      }),\n      style: [_reactNative.StyleSheet.absoluteFill, {\n        display: isFocused || nextPresentation != null && TRANSPARENT_PRESENTATIONS.includes(nextPresentation) ? 'flex' : 'none'\n      }, presentation != null && TRANSPARENT_PRESENTATIONS.includes(presentation) ? {\n        backgroundColor: 'transparent'\n      } : null]\n    }, React.createElement(_reactNative.View, {\n      style: [styles.contentContainer, contentStyle]\n    }, render()));\n  })));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  contentContainer: {\n    flex: 1\n  },\n  backImage: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain'\n  }\n});","map":{"version":3,"sources":["NativeStackView.tsx"],"names":["TRANSPARENT_PRESENTATIONS","descriptors","styles","container","isFocused","state","canGoBack","i","previousKey","nextKey","previousDescriptor","nexDescriptor","render","route","contentStyle","nextPresentation","header","back","title","getHeaderTitle","options","navigation","tintColor","headerLeft","label","headerBackTitle","headerRight","headerTitle","children","headerTransparent","position","backgroundColor","shadowOpacity","borderBottomWidth","StyleSheet","display","flex","contentContainer","backImage","height","width","margin","resizeMode"],"mappings":"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","sourcesContent":["import {\n  getHeaderTitle,\n  Header,\n  HeaderBackButton,\n  SafeAreaProviderCompat,\n  Screen,\n} from '@react-navigation/elements';\nimport type {\n  ParamListBase,\n  StackNavigationState,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Image, StyleSheet, View } from 'react-native';\n\nimport type {\n  NativeStackDescriptorMap,\n  NativeStackNavigationHelpers,\n} from '../types';\n\ntype Props = {\n  state: StackNavigationState<ParamListBase>;\n  // This is used for the native implementation of the stack.\n  // eslint-disable-next-line react/no-unused-prop-types\n  navigation: NativeStackNavigationHelpers;\n  descriptors: NativeStackDescriptorMap;\n};\n\nconst TRANSPARENT_PRESENTATIONS = [\n  'transparentModal',\n  'containedTransparentModal',\n];\n\nexport default function NativeStackView({ state, descriptors }: Props) {\n  return (\n    <SafeAreaProviderCompat>\n      <View style={styles.container}>\n        {state.routes.map((route, i) => {\n          const isFocused = state.index === i;\n          const canGoBack = i !== 0;\n          const previousKey = state.routes[i - 1]?.key;\n          const nextKey = state.routes[i + 1]?.key;\n          const previousDescriptor = previousKey\n            ? descriptors[previousKey]\n            : undefined;\n          const nexDescriptor = nextKey ? descriptors[nextKey] : undefined;\n          const { options, navigation, render } = descriptors[route.key];\n\n          const {\n            header,\n            headerShown,\n            headerTintColor,\n            headerBackImageSource,\n            headerLeft,\n            headerRight,\n            headerTitle,\n            headerTitleAlign,\n            headerTitleStyle,\n            headerStyle,\n            headerShadowVisible,\n            headerTransparent,\n            headerBackTitle,\n            presentation,\n            contentStyle,\n          } = options;\n\n          const nextPresentation = nexDescriptor?.options.presentation;\n\n          return (\n            <Screen\n              key={route.key}\n              focused={isFocused}\n              route={route}\n              navigation={navigation}\n              headerShown={headerShown}\n              headerTransparent={headerTransparent}\n              header={\n                header !== undefined ? (\n                  header({\n                    back: previousDescriptor\n                      ? {\n                          title: getHeaderTitle(\n                            previousDescriptor.options,\n                            previousDescriptor.route.name\n                          ),\n                        }\n                      : undefined,\n                    options,\n                    route,\n                    navigation,\n                  })\n                ) : (\n                  <Header\n                    title={getHeaderTitle(options, route.name)}\n                    headerTintColor={headerTintColor}\n                    headerLeft={\n                      typeof headerLeft === 'function'\n                        ? ({ tintColor }) =>\n                            headerLeft({\n                              tintColor,\n                              canGoBack,\n                              label: headerBackTitle,\n                            })\n                        : headerLeft === undefined && canGoBack\n                        ? ({ tintColor }) => (\n                            <HeaderBackButton\n                              tintColor={tintColor}\n                              backImage={\n                                headerBackImageSource !== undefined\n                                  ? () => (\n                                      <Image\n                                        source={headerBackImageSource}\n                                        style={[\n                                          styles.backImage,\n                                          { tintColor },\n                                        ]}\n                                      />\n                                    )\n                                  : undefined\n                              }\n                              onPress={navigation.goBack}\n                              canGoBack={canGoBack}\n                            />\n                          )\n                        : headerLeft\n                    }\n                    headerRight={\n                      typeof headerRight === 'function'\n                        ? ({ tintColor }) =>\n                            headerRight({ tintColor, canGoBack })\n                        : headerRight\n                    }\n                    headerTitle={\n                      typeof headerTitle === 'function'\n                        ? ({ children, tintColor }) =>\n                            headerTitle({ children, tintColor })\n                        : headerTitle\n                    }\n                    headerTitleAlign={headerTitleAlign}\n                    headerTitleStyle={headerTitleStyle}\n                    headerStyle={[\n                      headerTransparent\n                        ? {\n                            position: 'absolute',\n                            backgroundColor: 'transparent',\n                          }\n                        : null,\n                      headerStyle,\n                      headerShadowVisible === false\n                        ? { shadowOpacity: 0, borderBottomWidth: 0 }\n                        : null,\n                    ]}\n                  />\n                )\n              }\n              style={[\n                StyleSheet.absoluteFill,\n                {\n                  display:\n                    isFocused ||\n                    (nextPresentation != null &&\n                      TRANSPARENT_PRESENTATIONS.includes(nextPresentation))\n                      ? 'flex'\n                      : 'none',\n                },\n                presentation != null &&\n                TRANSPARENT_PRESENTATIONS.includes(presentation)\n                  ? { backgroundColor: 'transparent' }\n                  : null,\n              ]}\n            >\n              <View style={[styles.contentContainer, contentStyle]}>\n                {render()}\n              </View>\n            </Screen>\n          );\n        })}\n      </View>\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  contentContainer: {\n    flex: 1,\n  },\n  backImage: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain',\n  },\n});\n"]},"metadata":{},"sourceType":"script"}